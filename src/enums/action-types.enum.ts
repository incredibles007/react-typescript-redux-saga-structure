/**
 * App basic action types
 */
export enum EBasicActionTypes {
    INIT_STORE = 'ON_INIT',
}

/**
 * Library Assets management action types
 */
export enum ELibraryAssetsActionTypes {
    /**
     * Library Assets
     * Variables management action types
     */
    GET_ALL_BUSINESS_VARIABLES = 'GET_ALL_BUSINESS_VARIABLES',
    GET_ALL_BUSINESS_VARIABLES_SUCCESS = 'GET_ALL_BUSINESS_VARIABLES_SUCCESS',
    GET_ALL_BUSINESS_VARIABLES_FAILED = 'GET_ALL_BUSINESS_VARIABLES_FAILED',

    /**
     * Library Assets
     * Models management action types
     */
    GET_ALL_MODELS = 'GET_ALL_MODELS',
    GET_ALL_MODELS_SUCCESS = 'GET_ALL_MODELS_SUCCESS',
    GET_ALL_MODELS_FAILED = 'GET_ALL_MODELS_FAILED',

    /**
     * Library Assets
     * Iterators management action types
     */
    GET_ALL_ITERATORS = 'GET_ALL_ITERATORS',
    GET_ALL_ITERATORS_SUCCESS = 'GET_ALL_ITERATORS_SUCCESS',
    GET_ALL_ITERATORS_FAILED = 'GET_ALL_ITERATORS_FAILED',

    /**
     * Library Assets
     * Nodes management action types
     */
    GET_ALL_NODES = 'GET_ALL_NODES',
    GET_ALL_NODES_SUCCESS = 'GET_ALL_NODES_SUCCESS',
    GET_ALL_NODES_FAILED = 'GET_ALL_NODES_FAILED',

    /**
     * Library Assets
     * Graphs management action types
     */
    GET_ALL_GRAPHS = 'GET_ALL_GRAPHS',
    GET_ALL_GRAPHS_SUCCESS = 'GET_ALL_GRAPHS_SUCCESS',
    GET_ALL_GRAPHS_FAILED = 'GET_ALL_GRAPHS_FAILED',
}

/**
 * Projects management action types
 */
export enum EProjectActionTypes {
    GET_ALL_PROJECTS = 'GET_ALL_PROJECTS',
    GET_ALL_PROJECTS_SUCCESS = 'GET_ALL_PROJECTS_SUCCESS',
    GET_ALL_PROJECTS_FAILED = 'GET_ALL_PROJECTS_FAILED',
    GET_SELECTED_GRAPH = 'GET_SELECTED_GRAPH',
    GET_SELECTED_GRAPH_SUCCESS = 'GET_SELECTED_GRAPH_SUCCESS',
    GET_SELECTED_GRAPH_FAILED = 'GET_SELECTED_GRAPH_FAILED',
    SET_NEW_NODE = 'SET_NEW_NODE',
    SET_NEW_NODE_SUCCESS = 'SET_NEW_NODE_SUCCESS',
    SET_NEW_NODE_FAILED = 'SET_NEW_NODE_FAILED',
    SET_GRAPH_EVENT = 'SET_GRAPH_EVENT',
    SET_SELECTED_PROJECT = 'SET_SELECTED_PROJECT',
    SET_SELECTED_NODE = 'SET_SELECTED_NODE',
}

/**
 * UI status management action types
 */
export enum EUiActionTypes {
    /**
     * Main Layout
     */
    CHANGE_HEADER_TITLE = 'CHANGE_HEADER_TITLE',
    UPDATE_TITLEBAR_CONFIG = 'UPDATE_TITLEBAR_CONFIG',
    SELECT_LIBRARY_ASSETS_TAB = 'SELECT_LIBRARY_ASSETS_TAB',
    UPDATE_LAYOUT_CONFIG = 'UPDATE_LAYOUT_CONFIG',
    /**
     * Projects Page
     */
    UPDATE_PROJECT_INSPECTOR_CONFIG = 'UPDATE_PROJECT_INSPECTOR_CONFIG',
    /**
     * Users Page
     */
    UPDATE_USER_INSPECTOR_CONFIG = 'UPDATE_USER_INSPECTOR_CONFIG',
    /**
     * Units Page
     */
    UPDATE_UNIT_INSPECTOR_CONFIG = 'UPDATE_UNIT_INSPECTOR_CONFIG',
    /**
     * Grapph Builder Page
     */
    SET_GRAPH_PANEL = 'SET_GRAPH_PANEL',
    UPDATE_GRAPH_RUN_INSPECTOR_CONFIG = 'UPDATE_GRAPH_RUN_INSPECTOR_CONFIG',
}

/**
 * User status management action types
 */
export enum EUserActionTypes {
    LOGIN = 'LOGIN',
    LOGIN_SUCCESS = 'LOGIN_SUCCESS',
    LOGIN_FAILED = 'LOGIN_FAILED',
    LOGOUT = 'LOGOUT',
    REFRESH_TOKEN = 'REFRESH_TOKEN',
    REFRESH_TOKEN_SUCCESS = 'REFRESH_TOKEN_SUCCESS',
    REFRESH_TOKEN_FAILED = 'REFRESH_TOKEN_FAILED',
}

/**
 * Analyses management action types
 */
export enum EAnalysesActionTypes {
    GET_ALL_ANALYSES = 'GET_ALL_ANALYSES',
    GET_ALL_ANALYSES_SUCCESS = 'GET_ALL_ANALYSES_SUCCESS',
    GET_ALL_ANALYSES_FAILED = 'GET_ALL_ANALYSES_FAILED',
}

/**
 * Users management action types
 */
export enum EUsersActionTypes {
    GET_ALL_USERS = 'GET_ALL_USERS',
    GET_ALL_USERS_SUCCESS = 'GET_ALL_USERS_SUCCESS',
    GET_ALL_USERS_FAILED = 'GET_ALL_USERS_FAILED',
    SEARCH_USERS = 'SEARCH_USERS',
    ADD_USER_GROUP_USER = 'ADD_USER_GROUP_USER',
    ADD_USER_GROUP_USER_SUCCESS = 'ADD_USER_GROUP_USER_SUCCESS',
    ADD_USER_GROUP_USER_FAILED = 'ADD_USER_GROUP_USER_FAILED',
    SELECT_USER_GROUP_USER = 'SELECT_USER_GROUP_USER',
    SELECT_USER_GROUP_USER_SUCCESS = 'SELECT_USER_GROUP_USER_SUCCESS',
    SELECT_USER_GROUP_USER_FAILED = 'SELECT_USER_GROUP_USER_FAILED',
    UPDATE_SELECTED_USER_GROUP_USER = 'UPDATE_SELECTED_USER_GROUP_USER',
    UPDATE_SELECTED_USER_GROUP_USER_SUCCESS = 'UPDATE_SELECTED_USER_GROUP_USER_SUCCESS',
    UPDATE_SELECTED_USER_GROUP_USER_FAILED = 'UPDATE_SELECTED_USER_GROUP_USER_FAILED',
    GET_ALL_ROLES = 'GET_ALL_ROLES',
    GET_ALL_ROLES_SUCCESS = 'GET_ALL_ROLES_SUCCESS',
    GET_ALL_ROLES_FAILED = 'GET_ALL_ROLES_FAILED',
}

/**
 * Units management action types
 */
export enum EUnitsActionTypes {
    GET_ALL_UNITS = 'GET_ALL_UNITS',
    GET_ALL_UNITS_SUCCESS = 'GET_ALL_UNITS_SUCCESS',
    GET_ALL_UNITS_FAILED = 'GET_ALL_UNITS_FAILED',
    ADD_DIMENSION_UNITS = 'ADD_DIMENSION_UNITS',
    ADD_DIMENSION_UNITS_SUCCESS = 'ADD_DIMENSION_UNITS_SUCCESS',
    ADD_DIMENSION_UNITS_FAILED = 'ADD_DIMENSION_UNITS_FAILED',
    UPDATE_DIMENSION_UNITS = 'UPDATE_DIMENSION_UNITS',
    UPDATE_DIMENSION_UNITS_SUCCESS = 'UPDATE_DIMENSION_UNITS_SUCCESS',
    UPDATE_DIMENSION_UNITS_FAILED = 'UPDATE_DIMENSION_UNITS_FAILED',
    GET_ALL_DIMENSIONS = 'GET_ALL_DIMENSIONS',
    GET_ALL_DIMENSIONS_SUCCESS = 'GET_ALL_DIMENSIONS_SUCCESS',
    GET_ALL_DIMENSIONS_FAILED = 'GET_ALL_DIMENSIONS_FAILED',
    SELECT_DIMENSION = 'SELECT_DIMENSION',
    SELECT_DIMENSION_SUCCESS = 'SELECT_DIMENSION_SUCCESS',
    SELECT_DIMENSION_FAILED = 'SELECT_DIMENSION_FAILED',
    UPDATE_SELECTED_DIMENSION = 'UPDATE_SELECTED_DIMENSION',
    UPDATE_SELECTED_DIMENSION_SUCCESS = 'UPDATE_SELECTED_DIMENSION_SUCCESS',
    UPDATE_SELECTED_DIMENSION_FAILED = 'UPDATE_SELECTED_DIMENSION_FAILED',
}
